{"name":"Dep-jaeger","tagline":"an internal/external dependency analyzer for software written in Prolog","body":"dep-jaeger\r\n=========\r\n\r\nAn internal/external dependency analyzer for software written in Prolog, useful for a quick overview about the internal structure.\r\n\r\nSoftware's core is written in Prolog, while the GUI is implemented in Java.\r\n\r\nThis project was developed in the context of the Artificial Intelligence course (taught by <a href=\"http://lacam.di.uniba.it:8000/people/FlorianaEsposito.html\">F. Esposito</a> and <a href=\"http://lacam.di.uniba.it:8000/~ferilli/ufficiale/ferilli.html\">S. Ferilli</a>), MSc in Computer Science, Universit√† degli Studi di Bari 'Aldo Moro'.\r\n\r\ndep-jaeger is able to run only on YAP.\r\n\r\nFurther info are available in the documentation (Italian Only).\r\n\r\n\r\n## Authors \r\n\r\n\r\nNicola Alessandro Natilla - alessandro.natilla@gmail.com\t\r\nDamiano Romita - d.romita@gmail.com\r\n\r\n## Dependencies\r\n\r\nUnix/Linux O.S.\r\n\r\nYAP 6.2.2 - http://www.dcc.fc.up.pt/vsc/Yap/yap-6.2.2.tar.gz\r\n\r\ngraphviz - http://www.graphviz.org\r\n\r\n\r\n## Info\r\n\r\n\r\nProlog sources are available both in folder 'prolog' and in folder named 'core' contained in 'dep-jaeger'. \r\nJava sources are available in folder 'java'.\r\n\r\n## Run\r\n\r\n\r\nFirst, rename folder 'prolog' in 'core'. This directory needs to be placed in the same path of jarfile.\r\n\r\nThen, in terminal, type:  \r\n\r\n\t$ java -jar jaeger.jar <path-assoluto\\\\to\\\\yap>\r\n\r\nAlso if your prefer console interaction, type:\r\n\t\r\n\t$ cd //path//to//core//\r\n\t$ yap\r\n\t$ ['core'].\r\n\t$ help.\r\n\t\r\n","google":"UA-44749750-2","note":"Don't delete this file! It's used internally to help with page regeneration."}